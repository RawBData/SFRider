{"version":3,"sources":["images/lock.png","images/test.jpg","maps/racksLegend.jsx","maps/racks.jsx","maps/legend.jsx","maps/traffic.jsx","maps/crime.jsx","maps/accidents.jsx","maps/lights.jsx","maps/all.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Legend","props","console","log","this","markers","years","theIcon","L","icon","iconUrl","require","iconSize","i","length","element","yr","parseInt","install_yr","push","yr2015_Pres","layerGroup","map","rk","marker","lat","lon","bindPopup","spaces","yr2010_2014","yr2005_2009","yrpre_2005","yrAll","leaflet","control","layers","position","collapsed","addTo","scale","MapControl","withLeaflet","Icon","RacksMap","racks","React","useState","Map","center","zoom","rack","TileLayer","url","attribution","legend","onAdd","div","DomUtil","create","cats","backgroundColors","letterColors","labels","level","bColor","tColor","innerHTML","join","traffic","setActiveTraffic","event","Circle","fillColor","model6_vol","radius","fillOpacity","stroke","key","objectid","point","coordinates","onClick","CrimeMap","crime","activeCrime","setActiveCrime","Marker","incident_id","latitude","longitude","Popup","onClose","police_district","incident_description","resolution","accidents","activeAccident","setActiveAccident","on_scene_dttm","location","call_type","call_type_group","neighborhoods_analysis_boundaries","lights","activeLight","setActiveLight","light","street1","street2","App","state","mainMapSelection","bikeRacks","changeMap","bind","fetch","then","results","json","data","setState","crimeData","filter","incident_category","accidentData","newMap","mapDisplay","class","type","name","id","checked","for","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93c5b5e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lock.49d5c9f7.png\";","module.exports = __webpack_public_path__ + \"static/media/test.73d7cf17.jpg\";","import { MapControl, withLeaflet, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\n\n\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() { \n\n    console.log(this.props.markers);\n    let years = {\n      \"2015-Present\":[],\n      \"2010-2014\":[],\n      \"2005-2009\":[],\n      \"pre-2005\":[],\n    }\n\n    const theIcon = L.icon({\n      iconUrl: require('../images/lock.png'),\n      iconSize: [35, 35],\n    });\n\n//     lat: \"37.754811\"\n// lon: \"-122.418601\"\n    for (let i = 0; i < this.props.markers.length; i++) {\n      const element = this.props.markers[i];\n      // console.log(element.install_yr);\n      let yr = parseInt(element.install_yr)\n      switch (true) {\n        case (yr>2014):\n          years[\"2015-Present\"].push(element)\n          break;\n      \n        case (yr>2009):\n          years[\"2010-2014\"].push(element)\n          break;\n\n        case (yr>2004):\n          years[\"2005-2009\"].push(element)\n          break;\n\n        default:\n          years[\"pre-2005\"].push(element)\n          break;\n      }\n    }\n\n    var yr2015_Pres = L.layerGroup(years[\"2015-Present\"].map( rk => (L.marker([rk.lat, rk.lon],{icon: theIcon}).bindPopup(`Spaces: ${rk.spaces}`))))\n    \n    var yr2010_2014 = L.layerGroup(years[\"2010-2014\"].map( rk => (L.marker([rk.lat, rk.lon],{icon: theIcon}).bindPopup(`Spaces: ${rk.spaces}`))))\n    \n    var yr2005_2009 = L.layerGroup(years[\"2005-2009\"].map( rk => (L.marker([rk.lat, rk.lon],{icon: theIcon}).bindPopup(`Spaces: ${rk.spaces}`))))\n    \n    var yrpre_2005 = L.layerGroup(years[\"pre-2005\"].map( rk => (L.marker([rk.lat, rk.lon],{icon: theIcon}).bindPopup(`Spaces: ${rk.spaces}`))))\n    \n    var yrAll = L.layerGroup(this.props.markers.map( rk => (L.marker([rk.lat, rk.lon],{icon: theIcon}).bindPopup(`Spaces: ${rk.spaces}`))))\n    \n    \n    const { map } = this.props.leaflet;\n\n    \n    L.control.layers({},{\n    \"2015-Present\":yr2015_Pres,\n    \"2010-2014\" :yr2010_2014,\n    \"2005-2009\" :yr2005_2009,\n    \"pre-2005\" :yrpre_2005,\n    \"All\" : yrAll,\n    },{position:\"topleft\",collapsed:false}).addTo(map)\n\n    L.control.scale().addTo(map);\n  }\n  \n  componentWillUnmount(){\n      //This overwrite original version wich attemped to remove too late and crashed site\n    //   console.log(\"this should replace old one\");\n  }\n}\n\nexport default withLeaflet(Legend);\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer,  } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\nimport RacksLegend from './racksLegend';\n\nconst icon = new Icon({\n  iconUrl: require(\"../images/lock.png\"),\n  iconSize: [30, 30]\n});\n\nexport default function RacksMap({racks}) {\n  const [activeRack, setActiveRack] = React.useState(null);\n  // let Deezracks = racks;\n  return (\n          <div>\n            \n            <div>\n              \n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n              \n              <RacksLegend markers={racks.map(rack=>(rack))}/>\n              \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              \n              \n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() { \n\n    const legend = L.control({ position: \"topright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const cats = [\"Light\", \"Medium\", \"Heavy\", \"Dense\"];\n      const backgroundColors = [\"green\",\"yellow\",\"red\",\"purple\"]\n      const letterColors = [\"white\",\"black\",\"white\",\"white\"]\n      let labels = [];\n\n      for (let i = 0; i < cats.length; i++) {\n        let level = cats[i];\n        let bColor = backgroundColors[i];\n        let tColor = letterColors[i];\n\n        labels.push(\n          '<i style=\"background:' +\n            bColor + ';color:' + tColor +';' +\n            '\"> ' +\n            level + '</i>'\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n  \n  componentWillUnmount(){\n      //This overwrite original version wich attemped to remove too late and crashed site\n    //   console.log(\"this should replace old one\");\n  }\n}\n\nexport default withLeaflet(Legend);\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer, Circle, MapControl } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\nimport Legend from './legend';\n\n\nexport default function RacksMap({traffic}) {\n  const [activeTraffic, setActiveTraffic] = React.useState(null);\n\n  console.log(traffic)\n\n  return (\n          <div>\n            \n      \n            <div>\n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n    \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n\n              <Legend />\n    \n              {traffic.map(event => (\n                <Circle\n                  fillColor={ \n                    event.model6_vol > 700000 ? \"purple\" : \n                    event.model6_vol > 500000 ? \"red\" :\n                    event.model6_vol > 300000 ? \"gold\" :\n                    \"green\"\n                    }\n                  radius={200} \n                  fillOpacity={.4}\n                  stroke={false}\n                  key={event.objectid}\n                  center={[\n                    event.point.coordinates[1],\n                    event.point.coordinates[0]\n                  ]}\n                  onClick={() => {\n                    {/* console.log(\"marker opened\") */}\n                    setActiveTraffic(event);\n                  }}\n                />\n              ))}\n\n              \n              \n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\n\n\nexport default function CrimeMap({crime}) {\n  const [activeCrime, setActiveCrime] = React.useState(null);\n  console.log(crime);\n  return (\n          <div>\n            \n      \n            <div>\n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n    \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n    \n              {crime.map(event => (\n                <Marker\n                  key={event.incident_id}\n                  position={[\n                    event.latitude,\n                    event.longitude\n                  ]}\n                  onClick={() => {\n                    {/* console.log(\"marker opened\") */}\n                    setActiveCrime(event);\n                  }}\n                />\n              ))}\n    \n              {activeCrime && (\n                <Popup\n                  position={[\n                    activeCrime.latitude,\n                    activeCrime.longitude\n                  ]}\n                  onClose={() => {\n                    {/* console.log(\"marker closed\") */}\n\n                    setActiveCrime(null);\n                  }}\n                >\n                  <div>\n                    <h2>Police District : {activeCrime.police_district}</h2>\n                    <h2>Description : {activeCrime.incident_description}</h2>\n                    <h2>Resolution : {activeCrime.resolution}</h2>\n    \n                  </div>\n                </Popup>\n              )}\n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\n\n\nexport default function RacksMap({accidents}) {\n  const [activeAccident, setActiveAccident] = React.useState(null);\n  console.log(accidents)\n  return (\n          <div>\n            \n      \n            <div>\n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n    \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n    \n              {accidents.map(event => (\n                <Marker\n                  key={event.on_scene_dttm}\n                  position={[\n                    event.location.latitude,\n                    event.location.longitude\n                  ]}\n                  onClick={() => {\n                    {/* console.log(\"marker opened\") */}\n                    setActiveAccident(event);\n                  }}\n                />\n              ))}\n    \n              {activeAccident && (\n                <Popup\n                  position={[\n                    activeAccident.location.latitude,\n                    activeAccident.location.longitude\n                  ]}\n                  onClose={() => {\n                    {/* console.log(\"marker closed\") */}\n\n                    setActiveAccident(null);\n                  }}\n                >\n                  <div>\n                    <h2>Type : {activeAccident.call_type}</h2>\n                    <h2>Seriousness : {activeAccident.call_type_group}</h2>\n                    <h2>Neighborhood : {activeAccident.neighborhoods_analysis_boundaries}</h2>\n    \n                  </div>\n                </Popup>\n              )}\n              \n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\n\n\nexport default function CrimeMap({lights}) {\n  const [activeLight, setActiveLight] = React.useState(null);\n  console.log(lights);\n  return (\n          <div>\n            \n      \n            <div>\n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n    \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n    \n              {lights.map(light => (\n                <Marker\n                  key={light.objectid}\n                  position={[\n                    light.point.coordinates[1],\n                    light.point.coordinates[0]\n                  ]}\n                  onClick={() => {\n                    {/* console.log(\"marker opened\") */}\n                    setActiveLight(light);\n                  }}\n                />\n              ))}\n    \n              {activeLight && (\n                <Popup\n                  position={[\n                    activeLight.point.coordinates[1],\n                    activeLight.point.coordinates[0]\n                  ]}\n                  onClose={() => {\n                    {/* console.log(\"marker closed\") */}\n\n                    setActiveLight(null);\n                  }}\n                >\n                  <div>\n                    <h2>Corner of {activeLight.street1} and {activeLight.street2}</h2>\n                  </div>\n                </Popup>\n              )}\n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"../App.css\";\n\n\nexport default function RacksMap({racks}) {\n  const [activeRack, setActiveRack] = React.useState(null);\n\n  return (\n          <div>\n            \n      \n            <div>\n            <Map center={[37.773943, -122.449484]} zoom={13.4}>\n    \n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n    \n              \n            </Map>\n      \n            </div>\n      \n          </div>\n        );\n                \n      }","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer, MapControl, withLeaflet } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"./App.css\";\nimport Racks from \"./maps/racks\";\nimport Traffic from \"./maps/traffic\";\nimport Crime from \"./maps/crime\";\nimport Accidents from \"./maps/accidents\";\nimport Lights from \"./maps/lights\";\nimport All from \"./maps/all\";\n\n\nconst icon = new Icon({\n  iconUrl: require(\"./images/test.jpg\"),\n  iconSize: [25, 25]\n});\n\nclass App extends React.Component{\n\n  // SF Coordinates\n  // latitude:37.773943,\n  // longitude:-122.449484,\n\n  \n\n  constructor(){\n    super();\n    this.state={\n      mainMapSelection:\"traffic\",\n      bikeRacks : [],\n      crime : [],\n      accidents : [],\n      traffic: [],\n      lights: []\n    }\n\n    this.changeMap = this.changeMap.bind(this);\n\n  }\n\n  componentDidMount(){\n\n    //fetch racks data\n    fetch(\"https://data.sfgov.org/resource/hn4j-6fx5.json\")\n    .then(results=> {return results.json()})\n    .then(data=>{\n      //console.log(data);\n      this.setState({\n        bikeRacks: data,\n      })\n    })\n\n    //fetch crime and accident data\n    fetch(\"https://data.sfgov.org/resource/wg3w-h783.json\")\n    .then(results=> {return results.json()})\n    .then(data=>{\n      //console.log(data);\n      let crimeData = data.filter(crime=> crime.latitude && crime.incident_category === \"Larceny Theft\");\n      let accidentData = data.filter(crime=> crime.latitude && crime.incident_category === \"Traffic Collision\");\n      // console.log(accidentData);\n      this.setState({\n        crime: crimeData,\n        accidents: accidentData\n      })\n    })\n\n    //fetch accident data\n    // fetch(\"https://data.sfgov.org/resource/nuek-vuh3.json\")\n    // .then(results=> {return results.json()})\n    // .then(data=>{\n    //   // console.log(data);\n    //   // let crimeData = data.filter(crime=> crime.latitude && crime.incident_category === \"Larceny Theft\");\n    //   let accidentData = data.filter(acc=> acc.location.latitude && acc.call_type === \"Traffic Collision\");\n    //   // console.log(accidentData);\n    //   this.setState({\n    //     accidents: accidentData\n    //   })\n    // })\n\n    //fetch traffic data\n    fetch(\"https://data.sfgov.org/resource/awac-r27z.json\")\n    .then(results=> {return results.json()})\n    .then(data=>{\n      // console.log(data);\n      //data = data.filter(crime=> crime.latitude && crime.incident_category === \"Larceny Theft\");\n      this.setState({\n        traffic: data,\n      })\n    })\n\n    //\n    //fetch Bicyle lights location\n    fetch(\"https://data.sfgov.org/resource/a5zr-cehj.json\")\n    .then(results=> {return results.json()})\n    .then(data=>{\n      console.log(data);\n      this.setState({\n        lights: data,\n      })\n    })\n\n    // console.log(\"state\",this.state.bikeRacks);\n\n\n  }\n\n  changeMap(newMap){\n    console.log(\"changing maps to \", newMap);\n      this.setState({\n        mainMapSelection : newMap\n      })\n  }\n\n  render(){\n    let mapDisplay;\n    switch (this.state.mainMapSelection) {\n      case \"racks\":\n        mapDisplay = (<Racks \n                        icon={icon}\n                        racks={this.state.bikeRacks}/>)\n        break;\n      case \"traffic\":\n        console.log(\"chose traffic to display\")\n        mapDisplay = (<Traffic traffic={this.state.traffic}/>)\n        break;\n    \n      case \"crime\":\n        console.log(\"chose traffic to display\")\n        mapDisplay = (<Crime crime={this.state.crime}/>)\n        break;\n\n      case \"lights\":\n          console.log(\"chose lights to display\")\n          mapDisplay = (<Lights lights={this.state.lights}/>)\n          break;\n\n      case \"accidents\":\n        console.log(\"chose accidents to display\")\n        mapDisplay = (<Accidents accidents={this.state.accidents}/>)\n        break;\n\n      case \"all\":\n        console.log(\"chose all to display\")\n        mapDisplay = (<All \n                        crime={this.state.crime}\n                        accidents={this.state.accidents}\n                        racks={this.state.bikeRacks}\n                        traffic={this.state.traffic}\n                      />)\n        break;\n    \n      default:\n        break;\n    }\n\n\n    return (\n      <div>\n        <div>\n                <h1>\n                  SFRider: Biking SF Data\n                </h1>\n        </div>\n\n        <div class=\"tabs-wrapper\">\n          <div class=\"tabs\">\n            \n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-1\" \n                      checked={this.state.mainMapSelection===\"traffic\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"traffic\")}}\n              />\n              <label for=\"tab-1\" class=\"tab-label\">Traffic</label>\n            </div>\n\n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-2\" \n                      checked={this.state.mainMapSelection===\"racks\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"racks\")}}\n              />\n              <label for=\"tab-2\" class=\"tab-label\">Racks</label>\n            </div>\n\n\n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-3\" \n                      checked={this.state.mainMapSelection===\"accidents\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"accidents\")}}\n              />\n              <label for=\"tab-3\" class=\"tab-label\">Accidents</label>\n            </div>\n\n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-4\" \n                      checked={this.state.mainMapSelection===\"crime\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"crime\")}}\n              />\n              <label for=\"tab-4\" class=\"tab-label\">Crime</label>\n            </div>\n\n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-5\" \n                      checked={this.state.mainMapSelection===\"lights\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"lights\")}}\n              />\n              <label for=\"tab-5\" class=\"tab-label\">Lights</label>\n            </div>\n\n            <div class=\"tab\">\n              <input type=\"radio\" \n                      name=\"css-tabs\" \n                      id=\"tab-6\" \n                      checked={this.state.mainMapSelection===\"all\"} \n                      class=\"tab-switch\"\n                      onClick={()=>{this.changeMap(\"all\")}}\n              />\n              <label for=\"tab-6\" class=\"tab-label\">All</label>\n            </div>\n\n          </div> \n        </div>\n\n        <div>\n          {mapDisplay}\n        </div>\n\n        \n      </div>\n    );\n\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}